// prisma/schema.prisma
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}

enum SkillType {
  TECHNICAL
  SOFT
  INTERPERSONAL
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
}

model Resume {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  email      String?
  phone      String?
  address    String?
  summary    String?
  skills     Skill[]
  education  Education[]
  experience Experience[]
  projects   Project[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Skill {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  level    SkillLevel // Beginner, Intermediate, Advanced, Expert
  type     SkillType // e.g., "technical" or "soft | interpersonal"
  category String // e.g., "Programming Languages", "Frameworks", "Interpersonal Skills"
  resumeId String     @db.ObjectId
  resume   Resume     @relation(fields: [resumeId], references: [id])
}

model Education {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  institution  String
  degree       String
  fieldOfStudy String
  startDate    DateTime
  endDate      DateTime?
  resumeId     String    @db.ObjectId
  resume       Resume    @relation(fields: [resumeId], references: [id])
}

model Experience {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  company     String
  position    String
  startDate   DateTime
  endDate     DateTime?
  description String[]
  resumeId    String    @db.ObjectId
  resume      Resume    @relation(fields: [resumeId], references: [id])
}

model Project {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  link        String?
  startDate   DateTime?
  endDate     DateTime?
  resumeId    String    @db.ObjectId
  resume      Resume    @relation(fields: [resumeId], references: [id])
}
